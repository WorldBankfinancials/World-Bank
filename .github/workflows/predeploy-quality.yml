name: Pre-Deploy Quality Check (ESLint + Prettier + Deploy)

on:
  push:
    branches: [ "main" ]

jobs:
  quality-check:
    name: üßπ Lint & Format Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm ci || npm install
          npm install eslint prettier eslint-config-prettier eslint-plugin-prettier @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev

      - name: Run ESLint auto-fix
        run: npx eslint . --ext .js,.jsx,.ts,.tsx --fix

      - name: Run Prettier formatting
        run: npx prettier --write .

      - name: Check if there are remaining lint errors
        run: npx eslint . --ext .js,.jsx,.ts,.tsx
        continue-on-error: false  # ‚ùå stops deploy if any errors remain

      - name: Commit and push auto-fixes
        run: |
          if [[ `git status --porcelain` ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "üßπ Auto fix & format before deploy: $(date +'%Y-%m-%d %H:%M:%S')"
            git push
          else
            echo "‚úÖ Code clean. Ready for deployment."
          fi

  # üü¢ Optional: Auto-deploy after successful lint/format
  deploy:
    name: üöÄ Deploy to Netlify or Vercel
    runs-on: ubuntu-latest
    needs: quality-check  # ‚úÖ only runs if lint/format job succeeds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # üëâ Uncomment ONE of the sections below depending on your platform:

      # --- For Netlify deployment ---
      # - name: Deploy to Netlify
      #   uses: netlify/actions/cli@master
      #   with:
      #     args: deploy --prod --dir=dist
      #   env:
      #     NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
      #     NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

      # --- For Vercel deployment ---
      # - name: Deploy to Vercel
      #   uses: amondnet/vercel-action@v25
      #   with:
      #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
      #     vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
      #     vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
      #     working-directory: ./
      #     vercel-args: '--prod'
